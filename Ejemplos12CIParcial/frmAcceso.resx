<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnAceptar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="BtnCancelar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAJCSURBVFhH7Za/SgNBEMbvCSJp8gx5iHR5uzxCQLCJaPxD
        FIIEtYlYWCgKIlhYCDYWFhYWNp7zO2Zkktzu7RkFhXzw4bE7+327MzsbsxX+LW77/fyq1yvItw7/Libt
        dn6RZfmj8E34oeSbMeaI0fCfw6TTye/VyExDJIZY1ujy5XAuYu8qXoesYa3KfA/TtbVS8Sch4qdKvhkr
        i0VD5eoBUS9Eau+Eu91uUHCr1SotU+1MUL/5tJ80GpUiZ83mzBojWrXuBJfIFnOiFPNLt6aMaGpoHLSR
        TyNp16kgQnfF6/Cd1KL0sheJ1RyETk45uBN+DG1dFgYPii3gZutwKUInZ1Ma8qXHPXhw46XgSfVpi93e
        0Mnn224qY2i+CjlQ9NnmXfdi9LhOzaDs5JzQn9wwkbFnRzx0ahEpG7CTYwjtdKEHZyxzlIH0w+gGqkqA
        CfNmCl+EsVKxAVqQbmLzlb+c/hLyrcPFy4gZtHRS06o3gjtwI8Q8VNIZYORTSysdS0t5U8jmqgSH0sK0
        HkR3ryK+AI8FBmZI3TDzdSSlR4GaexxIHBmAXMZR6v8K7NhOaYZWR9KJmIYGMZTSkCFIfNLpDWP54cDM
        DK2G8FDKoWFBYI4p5BKSCTR1Og0sMlNodRzIndCQBVDzbYkpDPUvHAg1pB5GUmdMrY6WUkQxQthIis2Q
        b0jMZsJdiQIRS6dPqz/hvKltbkOoMsuB+iEaMzRTM65d8xTsSxshbkaejK8Ld1JbbVnwpF7Luw4rn9cV
        /i6y7BOdacoR9ldEQQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAApYtHAKeOTgCokFIAqZJVAKyVVwCslVkArpddAK+cZQCwnWYAsqFuALSjcQC3p3cAu6p6AL2r
        egC6qn0AvKt8AL6sfAAiXd8AClDkAAVU7AARXfQAIl7gAA5m8gAPaPQAEmH0ABRq9QAecPMAHnL3AClw
        5wAwceIAMHbrACNz9QAoePYALnr2AC18+AAwe/YANHv3AEV95QA2gPYAPIHwADyD9wA+hvkAQoj3AEiL
        9wBCiPgARYj4AEuO+ABPj/gATJD6AFGQ9QBfm/YAV5b4AFmX+ABbmvoAbZnkAH+i6AC+roIAvrONAL60
        jQDBsIEAwbGFAMSyhgDBsokAw7SLAMW3jwDAtZAAw7iUAMq6kgDIu5UAxbuYAMy/mwDJv58AycCgAM3E
        pgDOxakA0MOiANTHpwDQxqoA0MesANPIqADVyKkA0cmuANjNrwDTy7AA1MuyANTMsgDWzrYA19C5ANjQ
        uQDZ0r0A29S+AIqr5wCNqugAkK3oAKC66gCjvOwApr/sALXI7gDZ08MA2tTCAN3WwgDe2MUA4NrHAOHb
        yQDi3cwA5N/PAObh0gDp5dkA7OjcAMHS8QDY4vUA8O3jAPLw5wD18+wA4ejyAObr8gDi6fQA5+30AOnt
        8gDq7/QA7vL5APL09wD49vEA+vn2APDz+ADz9vwA9Pf8AAAAAAAvJgAAUEEAAHBbAACQdAAAsI4AAM+p
        AADwwwAA/9IRAP/YMQD/3VEA/+RxAP/qkQD/8LEA//bRAP///wAAAAAALxQAAFAiAABwMAAAkD4AALBN
        AADPWwAA8GkAAP95EQD/ijEA/51RAP+vcQD/wZEA/9KxAP/l0QD///8AAAAAAC8DAABQBAAAcAYAAJAJ
        AACwCgAAzwwAAPAOAAD/IBIA/z4xAP9cUQD/enEA/5eRAP+2sQD/1NEA////AAAAAAAvAA4AUAAXAHAA
        IQCQACsAsAA2AM8AQADwAEkA/xFaAP8xcAD/UYYA/3GcAP+RsgD/scgA/9HfAP///wAAAAAALwAgAFAA
        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
        ////////////////////////
</value>
  </data>
</root>